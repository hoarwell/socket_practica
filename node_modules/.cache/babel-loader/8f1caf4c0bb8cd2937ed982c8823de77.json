{"ast":null,"code":"import _slicedToArray from\"/Users/youngjo/Desktop/code/socket_practica/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import'./App.css';import ChatRoom from'./ChatRoom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _ChatRoom=ChatRoom(),messages=_ChatRoom.messages,sendMessage=_ChatRoom.sendMessage;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newMessage=_useState2[0],setNewMessage=_useState2[1];var messageRef=useRef();var handleSendMessage=function handleSendMessage(){if(newMessage){sendMessage(newMessage);setNewMessage(\"\");}};var handleNewMessageChange=function handleNewMessageChange(e){e.preventDefault();setNewMessage(e.target.value);};var handleKeyUp=function handleKeyUp(e){if(e.key===\"Enter\"){sendMessage(newMessage);setNewMessage(\"\");}};console.log(messages);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-container\",children:[/*#__PURE__*/_jsx(\"ul\",{children:messages.map(function(message,i){return message.body!==\"\"?/*#__PURE__*/_jsxs(\"li\",{children:[message.senderId,\" \",message.body]},i):null;})}),/*#__PURE__*/_jsx(\"div\",{ref:messageRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-container\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"message-input\",placeholder:\"enter message here\",variant:\"outlined\",value:newMessage,onChange:handleNewMessageChange,onKeyUp:handleKeyUp}),/*#__PURE__*/_jsx(\"button\",{disabled:newMessage===\"\",onClick:handleSendMessage,className:\"send-button\",children:\"Send\"})]})]})});}export default App;","map":{"version":3,"sources":["/Users/youngjo/Desktop/code/socket_practica/Client/src/App.js"],"names":["React","useState","useRef","ChatRoom","App","messages","sendMessage","newMessage","setNewMessage","messageRef","handleSendMessage","handleNewMessageChange","e","preventDefault","target","value","handleKeyUp","key","console","log","map","message","i","body","senderId"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAkCD,QAAQ,EAA1C,CAAQE,QAAR,WAAQA,QAAR,CAAkBC,WAAlB,WAAkBA,WAAlB,CACA,cAAoCL,QAAQ,CAAC,EAAD,CAA5C,wCAAOM,UAAP,eAAmBC,aAAnB,eACA,GAAMC,CAAAA,UAAU,CAAGP,MAAM,EAAzB,CAEA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAKH,UAAL,CAAkB,CAChBD,WAAW,CAACC,UAAD,CAAX,CACAC,aAAa,CAAC,EAAD,CAAb,CACD,CACF,CALD,CAOA,GAAMG,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,CAAD,CAAO,CACpCA,CAAC,CAACC,cAAF,GACAL,aAAa,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb,CACD,CAHD,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,CAAD,CAAO,CACzB,GAAGA,CAAC,CAACK,GAAF,GAAU,OAAb,CAAqB,CACnBX,WAAW,CAACC,UAAD,CAAX,CACAC,aAAa,CAAC,EAAD,CAAb,CACD,CACF,CALD,CAOAU,OAAO,CAACC,GAAR,CAAYd,QAAZ,EACA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,aAAK,SAAS,CAAC,WAAf,wBACE,aAAK,SAAS,CAAC,mBAAf,wBACE,oBACIA,QAAQ,CAACe,GAAT,CAAa,SAACC,OAAD,CAAUC,CAAV,QACTD,CAAAA,OAAO,CAACE,IAAR,GAAiB,EAAjB,cACE,sBACIF,OAAO,CAACG,QADZ,KACyBH,OAAO,CAACE,IADjC,GAASD,CAAT,CADF,CAII,IALK,EAAb,CADJ,EADF,cAUE,YAAK,GAAG,CAAGb,UAAX,EAVF,GADF,cAaE,aAAK,SAAS,CAAC,kBAAf,wBACE,cACE,SAAS,CAAC,eADZ,CAEE,WAAW,CAAC,oBAFd,CAGE,OAAO,CAAC,UAHV,CAIE,KAAK,CAAGF,UAJV,CAKE,QAAQ,CAAGI,sBALb,CAME,OAAO,CAAKK,WANd,EADF,cASE,eACE,QAAQ,CAAKT,UAAU,GAAK,EAD9B,CAEE,OAAO,CAAEG,iBAFX,CAGE,SAAS,CAAC,aAHZ,kBATF,GAbF,GADF,EADF,CAmCD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport ChatRoom from './ChatRoom';\n\nfunction App() {\n  const { messages, sendMessage } = ChatRoom();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messageRef = useRef();\n\n  const handleSendMessage = () => {\n    if ( newMessage ) {\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleNewMessageChange = (e) => {\n    e.preventDefault();\n    setNewMessage(e.target.value)\n  }\n\n  const handleKeyUp = (e) => {\n    if(e.key === \"Enter\"){\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  }\n\n  console.log(messages)\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"message-container\">\n          <ul>\n            { messages.map((message, i) => (\n                  message.body !== \"\" ? (\n                    <li key={i}>\n                      { message.senderId } { message.body }\n                    </li>\n                  ) : null\n            ))}\n          </ul>\n          <div ref={ messageRef }></div>\n        </div>\n        <div className=\"action-container\">\n          <input\n            className=\"message-input\"\n            placeholder=\"enter message here\"\n            variant=\"outlined\"\n            value={ newMessage }\n            onChange={ handleNewMessageChange }\n            onKeyUp = { handleKeyUp }\n          />\n          <button\n            disabled = { newMessage === \"\" }\n            onClick={handleSendMessage}\n            className=\"send-button\"\n          >\n            Send\n          </button>\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}