{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\nconst NEW_MESSAGE_EVENT = \"new-message-event\";\nconst SOCKET_SERVER_URL = \"http://localhost:3030\";\n\nconst ChatRoom = () => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n    socketRef.current.on(NEW_MESSAGE_EVENT, message => {\n      const incomingMessage = { ...message,\n        isOwner: message.senderId === socketRef.current.id\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\n_s(ChatRoom, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\n\n_c = ChatRoom;\nexport default ChatRoom;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/youngjo/Desktop/code/socket_practica/Client/src/ChatRoom.js"],"names":["useState","useEffect","useRef","socketIOClient","NEW_MESSAGE_EVENT","SOCKET_SERVER_URL","ChatRoom","messages","setMessages","socketRef","current","on","message","incomingMessage","isOwner","senderId","id","disconnect","sendMessage","messageBody","emit","body"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,SAAS,GAAGP,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,SAAS,CAACC,OAAV,GAAoBP,cAAc,CAACE,iBAAD,CAAlC;AACAI,IAAAA,SAAS,CAACC,OAAV,CAAkBC,EAAlB,CAAqBP,iBAArB,EAAyCQ,OAAD,IAAa;AACjD,YAAMC,eAAe,GAAG,EACpB,GAAGD,OADiB;AAEpBE,QAAAA,OAAO,EAAEF,OAAO,CAACG,QAAR,KAAqBN,SAAS,CAACC,OAAV,CAAkBM;AAF5B,OAAxB;AAIAR,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcM,eAAd,CAAf,CAAX;AACH,KAND;AAQA,WAAQ,MAAM;AACVJ,MAAAA,SAAS,CAACC,OAAV,CAAkBO,UAAlB;AACH,KAFD;AAGH,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMC,WAAW,GAAIC,WAAD,IAAiB;AACjCV,IAAAA,SAAS,CAACC,OAAV,CAAkBU,IAAlB,CAAuBhB,iBAAvB,EAA0C;AACtCiB,MAAAA,IAAI,EAAEF,WADgC;AAEtCJ,MAAAA,QAAQ,EAAEN,SAAS,CAACC,OAAV,CAAkBM;AAFU,KAA1C;AAIH,GALD;;AAOA,SAAO;AAAET,IAAAA,QAAF;AAAYW,IAAAA;AAAZ,GAAP;AACH,CA3BD;;GAAMZ,Q;;KAAAA,Q;AA6BN,eAAeA,QAAf;AAAwB","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport socketIOClient from 'socket.io-client';\n\nconst NEW_MESSAGE_EVENT = \"new-message-event\";\nconst SOCKET_SERVER_URL = \"http://localhost:3030\";\n\nconst ChatRoom = () => {\n    const [messages, setMessages] = useState([]);\n    const socketRef = useRef();\n\n    useEffect(() => {\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL);\n        socketRef.current.on(NEW_MESSAGE_EVENT, (message) => {\n            const incomingMessage = {\n                ...message,\n                isOwner: message.senderId === socketRef.current.id,    \n            };\n            setMessages((messages) => [...messages, incomingMessage]);\n        });\n\n        return (() => {\n            socketRef.current.disconnect();\n        })\n    }, []);\n\n    const sendMessage = (messageBody) => {\n        socketRef.current.emit(NEW_MESSAGE_EVENT, {\n            body: messageBody,\n            senderId: socketRef.current.id,\n        })\n    }\n\n    return { messages, sendMessage }\n}\n\nexport default ChatRoom;;"]},"metadata":{},"sourceType":"module"}