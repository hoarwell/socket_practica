{"ast":null,"code":"var _jsxFileName = \"/Users/youngjo/Desktop/code/socket_practica/Client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport ChatRoom from './ChatRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    messages,\n    sendMessage\n  } = ChatRoom();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messageRef = useRef();\n\n  const handleSendMessage = () => {\n    if (newMessage) {\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleNewMessageChange = e => {\n    e.preventDefault();\n    setNewMessage(e.target.value);\n  };\n\n  const handleKeyUp = e => {\n    if (e.key === \"Enter\") {\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: messages.map((message, i) => message.body !== \"\" ? /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [message.senderId, \" \", message.body]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this) : null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"message-input\",\n          id: \"message\",\n          label: \"Message\",\n          placeholder: \"enter message here\",\n          variant: \"outlined\",\n          value: newMessage,\n          onChange: handleNewMessageChange,\n          onKeyUp: handleKeyUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: newMessage === \"\",\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ripZmrIitCwtHkq7lB04RQAJ3Us=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/youngjo/Desktop/code/socket_practica/Client/src/App.js"],"names":["React","useState","useRef","ChatRoom","App","messages","sendMessage","newMessage","setNewMessage","messageRef","handleSendMessage","handleNewMessageChange","e","preventDefault","target","value","handleKeyUp","key","console","log","map","message","i","body","senderId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BH,QAAQ,EAA1C;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMQ,UAAU,GAAGP,MAAM,EAAzB;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9B,QAAKH,UAAL,EAAkB;AAChBD,MAAAA,WAAW,CAACC,UAAD,CAAX;AACAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,GALD;;AAOA,QAAMG,sBAAsB,GAAIC,CAAD,IAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,aAAa,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAIJ,CAAD,IAAO;AACzB,QAAGA,CAAC,CAACK,GAAF,KAAU,OAAb,EAAqB;AACnBX,MAAAA,WAAW,CAACC,UAAD,CAAX;AACAC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,GALD;;AAOAU,EAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAA,oBACIA,QAAQ,CAACe,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,KACTD,OAAO,CAACE,IAAR,KAAiB,EAAjB,gBACE;AAAA,uBACIF,OAAO,CAACG,QADZ,OACyBH,OAAO,CAACE,IADjC;AAAA,aAASD,CAAT;AAAA;AAAA;AAAA;AAAA,kBADF,GAII,IALR;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAK,UAAA,GAAG,EAAGb;AAAX;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,WAAW,EAAC,oBAJd;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,KAAK,EAAEF,UANT;AAOE,UAAA,QAAQ,EAAEI,sBAPZ;AAQE,UAAA,OAAO,EAAEK;AARX;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,QAAQ,EAAET,UAAU,KAAK,EAD3B;AAEE,UAAA,OAAO,EAAC,WAFV;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,OAAO,EAAEG,iBAJX;AAKE,UAAA,SAAS,EAAC,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAhEQN,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport ChatRoom from './ChatRoom';\n\nfunction App() {\n  const { messages, sendMessage } = ChatRoom();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messageRef = useRef();\n\n  const handleSendMessage = () => {\n    if ( newMessage ) {\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleNewMessageChange = (e) => {\n    e.preventDefault();\n    setNewMessage(e.target.value)\n  }\n\n  const handleKeyUp = (e) => {\n    if(e.key === \"Enter\"){\n      sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  }\n\n  console.log(messages)\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"message-container\">\n          <ul>\n            { messages.map((message, i) => (\n                  message.body !== \"\" ? (\n                    <li key={i}>\n                      { message.senderId } { message.body }\n                    </li>\n                  ) : null\n            ))}\n          </ul>\n          <div ref={ messageRef }></div>\n        </div>\n        <div className=\"action-container\">\n          <textarea\n            className=\"message-input\"\n            id=\"message\"\n            label=\"Message\"\n            placeholder=\"enter message here\"\n            variant=\"outlined\"\n            value={newMessage}\n            onChange={handleNewMessageChange}\n            onKeyUp={handleKeyUp}\n          />\n          <button\n            disabled={newMessage === \"\"}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSendMessage}\n            className=\"send-button\"\n          >\n            Send\n          </button>\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}